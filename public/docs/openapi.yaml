openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/events:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: 'Liste de tous les evenements par ordre decroissant de date et pagine'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Gestion de Event'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Gestion de Event'
      security: []
    parameters:
      -
        in: path
        name: size
        description: 'Optional parameter. Taille par page. Par defaut = 20.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 20
  '/api/events/{event_id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Gestion de Event'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Gestion de Event'
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Gestion de Event'
      security: []
    parameters:
      -
        in: path
        name: event_id
        description: 'The ID of the event.'
        example: 1
        required: true
        schema:
          type: integer
  /api/up_events:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: 'Liste de tous les evenements en cours par ordre decroissant de date et pagine'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Gestion de Event'
      security: []
    parameters:
      -
        in: path
        name: size
        description: 'Optional parameter. Taille par page. Par defaut = 20.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 20
  /api/order:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: 'Liste de toutes les commandes'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Gestion de Order'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Gestion de Order'
      security: []
  '/api/order/{order_id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Gestion de Order'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Gestion de Order'
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Gestion de Order'
      security: []
    parameters:
      -
        in: path
        name: order_id
        description: 'The ID of the order.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/order_event/{event_id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: 'Liste de toutes les commandes pour un evenement'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Gestion de Order'
      security: []
    parameters:
      -
        in: path
        name: event_id
        description: 'Event ID.'
        example: 2
        required: true
        schema:
          type: integer
  /api/order_intents:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: 'Liste de toutes les intentions de commandes pour un evenement'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Gestion de OrderIntent'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Gestion de OrderIntent'
      security: []
    parameters:
      -
        in: path
        name: event_id
        description: 'Event ID.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/order_intents/{order_intent_id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Gestion de OrderIntent'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Gestion de OrderIntent'
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Gestion de OrderIntent'
      security: []
    parameters:
      -
        in: path
        name: order_intent_id
        description: 'The ID of the order intent.'
        example: 9
        required: true
        schema:
          type: integer
  '/api/order_intents_event/{event_id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: 'Liste de toutes les intentions de commandes pour un evenement'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Gestion de OrderIntent'
      security: []
    parameters:
      -
        in: path
        name: event_id
        description: 'Event ID.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/validate_order_intents/{order_intent_id}':
    post:
      summary: "Validation d'une intention de commande"
      operationId: validationDuneIntentionDeCommande
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Gestion de OrderIntent'
      security: []
    parameters:
      -
        in: path
        name: order_intent_id
        description: ''
        example: 18
        required: true
        schema:
          type: integer
  /api/tickets:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: 'Liste des tickets pour un evenement'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Gestion de Ticket'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Gestion de Ticket'
      security: []
    parameters:
      -
        in: path
        name: event_id
        description: 'Event ID.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/tickets/{ticket_id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Gestion de Ticket'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Gestion de Ticket'
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Gestion de Ticket'
      security: []
    parameters:
      -
        in: path
        name: ticket_id
        description: 'The ID of the ticket.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/tick_event/{event_id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: 'Liste des tickets pour un evenement'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Gestion de Ticket'
      security: []
    parameters:
      -
        in: path
        name: event_id
        description: 'Event ID.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/ticket_event/{event_id}/{ticket_type_id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: 'Liste des tickets pour un evenement et un type de tycke specifique'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Gestion de Ticket'
      security: []
    parameters:
      -
        in: path
        name: event_id
        description: 'Event ID.'
        example: 2
        required: true
        schema:
          type: integer
      -
        in: path
        name: ticket_type_id
        description: 'TicketType ID.'
        example: 2
        required: true
        schema:
          type: integer
  /api/ticket_types:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: 'Liste des tickets pour un evenement'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Gestion de TicketType'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Gestion de TicketType'
      security: []
    parameters:
      -
        in: path
        name: event_id
        description: 'Event ID.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/ticket_types/{ticket_type_id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Gestion de TicketType'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Gestion de TicketType'
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Gestion de TicketType'
      security: []
    parameters:
      -
        in: path
        name: ticket_type_id
        description: 'The ID of the ticket type.'
        example: 18
        required: true
        schema:
          type: integer
  '/api/tick_type_event/{event_id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: 'Liste des tickets pour un evenement'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Gestion de TicketType'
      security: []
    parameters:
      -
        in: path
        name: event_id
        description: 'Event ID.'
        example: 2
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
  -
    name: 'Gestion de Event'
    description: "\nAPIs pour gerer les Events"
  -
    name: 'Gestion de Order'
    description: "\nAPIs pour gerer les Orders"
  -
    name: 'Gestion de OrderIntent'
    description: "\nAPIs pour gerer des OrderIntents"
  -
    name: 'Gestion de Ticket'
    description: "\nAPIs pour gerer des Tickets"
  -
    name: 'Gestion de TicketType'
    description: "\nAPIs pour gerer des TicketTypes"
